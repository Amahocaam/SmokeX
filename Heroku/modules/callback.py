from pyrogram import Client, filters
from pyrogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup

from Heroku.config import BOT_NAME, OWNER_USERNAME, UPDATE, SUPPORT, BOT_USERNAME

HELP_TEXT = """
Selam [{}](tg://user?id={})
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
‚úò ‚úò Merhaba ben ùôÇùôßùô™ùô• ùôàùô™ÃàùôØùôûùô† üáπüá∑
‚Ä£ Grubunuzda m√ºzik m√ºzik oynatabilirim.
‚Ä£ Beni gruba y√∂netici olarak ekleyin ve kesintisiz m√ºziƒüin tadƒ±nƒ± √ßƒ±karƒ±n.
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
"""


@Client.on_callback_query(filters.regex("home"))
async def home(_, query: CallbackQuery):
    await query.edit_message_text(f"{HELP_TEXT}".format(query.message.chat.first_name, query.message.chat.id),
    reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚úö Beni Gruba Ekle", url=f"https://t.me/{BOT_USERNAME}?startgroup=true")
                ],
                [
                    InlineKeyboardButton(
                        "üí≠ Support", url=f"https://t.me/destekgroup"),
                    InlineKeyboardButton(
                        "üìö Komutlar", callback_data="others")
                ]
           ]
        ),
    )






@Client.on_callback_query(filters.regex("others"))
async def others(_, query: CallbackQuery):
    await query.edit_message_text(
        f""" ú·¥á è è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) ƒ∞≈üte T√ºm Komutlar üáπüá∑\n\n¬ª /oynat => <≈ûarkƒ± ƒ∞smi> M√ºzik oynatƒ±r.\n¬ª /durdur => M√ºziƒüi dururur.\n¬ª /devam => M√ºziƒüi s√ºrd√ºr√ºr.\n¬ª /atla => M√ºziƒüi atlar.\n¬ª /son => M√ºziƒüi sonlandƒ±rƒ±r.\n¬ª /bul => M√ºzik indirir.\n¬ª /katil => Asistanƒ± gruba davet eder.""",
    reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "üõ†Ô∏è Kaynak Kod", url=f"https://te.legra.ph/file/bd12f1d8d0a2e893d056c.jpg"),
                    InlineKeyboardButton(
                        "üíù Owner", url=f"https://t.me/emilyboss")
                ],
                [
                    InlineKeyboardButton("‚¨ÖÔ∏è Geri", callback_data="home")
                ]
           ]
        ),
    )


@Client.on_callback_query(filters.regex("credit"))
async def credit(_, query: CallbackQuery):
    await query.edit_message_text(
        f"""ƒ∞≈üte T√ºm Komutlar üáπüá∑\n\n¬ª /oynat => <≈ûarkƒ± ƒ∞smi> M√ºzik oynatƒ±r.\n¬ª /durdur => M√ºziƒüi dururur.\n¬ª /devam => M√ºziƒüi s√ºrd√ºr√ºr.\n¬ª /atla => M√ºziƒüi atlar.\n¬ª /son => M√ºziƒüi sonlandƒ±rƒ±r.\n¬ª /bul => M√ºzik indirir.\n¬ª /katil => Asistanƒ± gruba davet eder.""",
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton("üóëÔ∏è Kapat", callback_data="cls")
                ],
            ]
        ),
    )

@Client.on_callback_query(filters.regex("cls"))
async def reinfo(_, query: CallbackQuery):
    try:
        await query.message.delete()
        await query.message.reply_to_message.delete()
    except Exception:
        pass


@Client.on_callback_query(filters.regex("repoinfo"))
async def repoinfo(_, query: CallbackQuery):
    await query.edit_message_text(
        f"""·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á : 

·¥õ ú…™s  Ä·¥á·¥ò·¥è …™s ·¥è…¥ ü è ·¥ç·¥Ä·¥Ö·¥á “ì·¥è Ä ·¥Ö·¥á·¥ò ü·¥è è…™…¥…¢ ·¥Ä ·¥ò·¥è·¥°·¥á Ä“ì·¥ú ü ·¥ç·¥ús…™·¥Ñ  ô·¥è·¥õ ·¥è…¥  ú·¥á Ä·¥è·¥ã·¥ú ·¥°…™·¥õ ú·¥è·¥ú·¥õ “ì·¥Ä·¥Ñ…™…¥…¢  ú·¥á Ä·¥è·¥ã·¥ú ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ  ô·¥Ä…¥…¥…™…¥…¢ ·¥ò Ä·¥è ô·¥á ü·¥ç.

üîó s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á : https://github.com/ITZ-ZAID/Zaid-Vc-Player""",
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton("‚¨ÖÔ∏è  ô·¥Ä·¥Ñ·¥ã", callback_data="others")
                ],
            ]
        ),
        disable_web_page_preview=True,
    )
